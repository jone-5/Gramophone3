*{
  box-sizing: border-box; 
}
:root{
  --button-color: #8C4303
}
main {
  margin: 10px auto;
  padding: 0 1rem;
  max-width: 50rem;
  font-family: 'volkhov';
  fill: #000; 
  }

  body{
    margin: 6rem;
    text-transform: none;
    font-family: 'volkhov', serif;
  }
  .panel {
    display: grid;
    align-items: center;
  }
  
  .hero{
    position: fixed;
    top:0;
    left: 0;
    right: 0;
    bottom:0;
    object-fit: cover;
    z-index: -1;
  }
  
  .hero .overlay{
  position:absolute;
  top:0;
  left:0;
  right:0;
  bottom: 0;;
  color:white;
  padding: 2rem;
}

.hero h1{
  font-size: 5rem;
  margin: 0;
  text-align: center;
  margin-top: 10vh;
  text-shadow: 5px 5px 10px #000;
}

.hero p{
    font-size: 2.3rem;
    text-align:center;
    color: #fff;
    margin-top: 20px;
    font-family: 'volkov';
  }
  
  .cards{
    display:flex;
  }
  .card p{
    text-align: center;
    color: white;
    padding:1rem;
    margin-top: 5rem;
    text-shadow: 5px 5px 10px #000;
  }
  
  .cards .overlay{
    position:absolute;
    top: 0;
    left: 0;
    right:0;
    bottom: 0;
    background-color: #000;
    transition: 100ms;
    
  }
  
  .card{
    position:relative;
  margin-right: 1rem;

  
}

.card :last-of-type{
  margin-right:0;
  }
  
  .card:hover .overlay{
    opacity:0;
    transition:ease-in-out 300ms;
  }

  
  .button{
    display: inline-block;
    border: 5px solid var(--button-color);
    padding: 2rem;
    text-decoration: none;
    color: var(--button-color);
    border-radius: 5px; 
    transition: background-color 300ms, color 300ms;
    bottom: 20px;
    font-family: syne;
    text-transform: uppercase;
    font-weight: bold; 
  }
  
  .button:hover {
    color: #fff;
    background-color: var(--button-color);
  }
  
  .paragraph {
    font-family: volkhov;
    font-size: 14px;
    line-height: 10px;
    color: #402401
  }
  
  .h1 {
    font-family: syne;
    font-size: 48px;
    line-height: 62px;
    color: #8C4303;
    font-family: 'Syne', sans-serif;
  }
  .h2 {
    font-family: syne;
    font-size: 40px;
    line-height: 62px;
  }
  .h3 {
    font-family: syne;
    font-size: 38px;
    line-height: 62px;
  }
  .row{
    display: flex;
  } 
  .column {
    float: center;
    width: 25%;
    padding: 15px;
    align-items: center;
  }

  
  /* Header Styles */
  header {
     justify-content: top;
  }
  header ul {
    font-display: flex;
    /* flex-direction: column; */
    margin-inline: 0;
    padding-right: 0;
    list-style-position: 0;  
    /* justify-content: space-around; */
    gap: .5rem;
    padding: 0;
    margin: 0;
    list-style-type: none;
    display: flex;
    font-family:'volkov';
  }
  header a {
    display: block;
    padding: 1rem;
    user-select: none;
    font-family: 'volkov';
    text-decoration: none;
  } 
  header a:not([href]) {
    color: #aaa;
  }
  header a[href]:hover {
    color: #402401;
  }    
  .main-menu {
    width: 100%;
    background-color: #402401;
    position: fixed;

  }   
  .menu-show {
    transform: translateY(0);
  }
  .menu-icon {
    position: fixed;
    top: 24px;
    left: 24px;
    background-color:rgba(0,45,0,.6);
    border-radius: 50%;
    z-index: 1;
    width: 56px;
    height: 56px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 6px;
  }
  .menu-icon div {
    width: 30px;
    height: 3px;
    background-color: black;
  } 
/* End Header Styles */


  section {
    background: linear-gradient(-45deg, #d18973, #fff, #f5ae5e, #f7d4ae);
    background-size: 400% 400%;
    animation: gradient 10s ease infinite;
    height: 300vh;
    z-index: 1;
    position: relative;
    margin-top: 80vh;
    align-self: stretch;
}
  .page-content {
    display: grid;
    grid-gap: 1rem;
    padding: 1rem;
    max-width: 1024px;
    margin: 0 auto;
}  
   @keyframes gradient {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }
.loader{
  margin: 0 0 2em;
  height: 100px;
  width: 20%;
  text-align: center;
  padding: 1em;
  margin: 0 auto 1em;
  display: inline-block;
  vertical-align: top;
}

/* Form Styles */
:root {
  --form-bg-color: #8c4303;
  --form-bg-color-light: #fffdd;
  --form-font-color: #fff;
}

* {
  box-sizing: border-box;
}

body {
  display: flex;
  flex-direction: column;
  font-family: "volkov", sans-serif;
  background-color: var(--form-bg-color);
  color: var(--form-bg-color);
  margin: 0 1rem;
}

section {
  max-width: 50rem;
  align-self: center;
}

/* clear defaults  */
input,
textarea,
fieldset {
  padding: 0;
  margin: 0;
}

h2 {
  font-size: 2.5rem;
}

form {
  display: grid;
  grid-template-columns: 1fr;
  font-size: 1.4rem;
  line-height: 1.5;
}

fieldset {
  border: none;
  display: grid;
  grid-template-columns: min-content 1fr;
  grid-column-gap: 1rem;
}

/* legend is not considered a child of fieldset and may not render in the grid */
legend {
  line-height: 1.2;
  grid-column: span 2;
  margin-bottom: 0.6rem;
}

input:not([type="radio"]):not([type="checkbox"]),
fieldset,
textarea {
  margin-bottom: 1.5rem;
}

input:not([type="radio"]):not([type="checkbox"]),
textarea {
  background-color: tan;
  padding: 0.3rem;
}

button {
  justify-self: center;
  padding: 0.5rem 1rem;
  font-size: 1.2rem;
  background-color: var(--form-bg-color);
  color: var(--form-font-color);
  border: 2px solid var(--form-font-color);
  border-radius: 6px;
  margin-bottom: 3rem;

  transition: background-color 300ms;
}

button:hover,
button:focus {
  color: var(--form-bg-color);
  background-color: var(--form-bg-color-light);
}

/* checkboxes and radios will have their own hover and focus states in next example. you don't need to add the :not() if you place your button hover and focus states below this */
input:not([type="radio"]):not([type="checkbox"]):hover,
input:not([type="radio"]):not([type="checkbox"]):focus,
textarea:hover,
textarea:focus {
  outline: 1px solid yellow;
  background-color: var(--form-bg-color-light);
}

@media (min-width: 500px) {
  form {
    grid-template-columns: max-content 1fr;
    grid-column-gap: 1rem;
  }

  form > label {
    justify-self: end;
  }

  label[for="review"] {
    justify-self: start;
  }

  fieldset,
  label[for="review"],
  textarea,
  button {
    grid-column: 2;
  }

  button {
    justify-self: center;
  }
}

